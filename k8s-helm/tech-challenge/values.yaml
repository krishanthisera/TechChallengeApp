app:
  appVersion: 1.0v
  replicaCount: 3
  image:
    repository: krishees/techchallengeapp
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  resources: 
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    enabled: false
    #Optional if you should connect to an external DB other than the DB defined in this value file
    dbName: ""
    dbPassword: "" 
    dbUser: ""
    bdHost: ""
    dbPort: ""

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  
  #In order to database seeding to be completed it is required maintain time window (seconds)
  sleep: 120

metricServer:
  #If the you should configure HPA
  #Enable metric server which may install the metric server
  #Ref: 
  enabled: false

jobs:
  image:
    repository: krishees/techchallengeapp
    tag: latest
    pullPolicy: IfNotPresent
  #In order to start the DB seeding, db deployement should be completed.
  #Hence it is required maintain a time window (seconds)
  sleep: 160

db:
  replicaCount: 1
  image:
    repository: postgres
    tag: latest
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  resources: 
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    #Following Values should be base64 encoded
    dbName: challenge
    dbPassword: shadowfox
    dbUser: servian 
  persistData:
    enabled: false
    storageClass:
      provisioner: kubernetes.io/aws-ebs
      type: gp2
      reclaimPolicy: Retain
    persistenceVolume:
      accessModes: ReadWriteOnce
      storage: 1Gi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

nodePort:
  enabled: true
  port: 30080



ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


